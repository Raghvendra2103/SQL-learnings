-- exercises 1 on joins

alter table departments_dup drop column dept_manager;

select* from departments_dup;

ALTER TABLE departments_dup 
CHANGE COLUMN dept_no dept_no CHAR(4) NULL;


ALTER TABLE departments_dup
CHANGE COLUMN dept_name dept_name VARCHAR(40) NULL;



CREATE TABLE departments_dup (
    dept_no CHAR(4) NULL,
    dept_name VARCHAR(40) NULL
)


insert into departments_dup 
(
dept_no, 
dept_name
) 
select * from departments;

SELECT 
    *
FROM
    departments_dup
ORDER BY dept_no DESC;


DELETE FROM departments_dup 
WHERE
    dept_no = 'd002';
    
    
insert into departments_dup (dept_name)
values ('public_relations');

insert into departments_dup(dept_no) values('d010'),('d011');

--exercise 2 on joins


drop table if exists dept_manager_dup;

CREATE TABLE dept_manager_dup (
    emp_no INT(11) NOT NULL,
    dept_no CHAR(4) NULL,
    from_date DATE NOT NULL,
    to_date DATE NULL
);


insert into dept_manager_dup 
select * from dept_manager;


insert into dept_manager_dup(emp_no, from_date)
values (999904, '2017-01-01'),
(999905, '2017-01-01'),
(999906, '2017-01-01'),
(999907, '2017-01-01');


select * from dept_manager_dup;


DELETE FROM dept_manager_dup 
WHERE
    dept_no = 'd001';
    

insert into departments_dup(dept_name)
values ('Public Relations');


select* from departments_dup;


---


SELECT 
    d.dept_no, m.emp_no, d.dept_name
FROM
    dept_manager_dup m
        RIGHT JOIN
    departments_dup d ON m.dept_no = d.dept_no
ORDER BY m.dept_no;

-- the old and new join syntax
 #join
SELECT 
    m.dept_no, m.emp_no, d.dept_name
FROM
    dept_manager_dup m
		inner JOIN
    departments_dup d ON m.dept_no = d.dept_no;

#where 

SELECT 
    m.dept_no, m.emp_no, d.dept_name
FROM
    dept_manager_dup m,
    departments_dup d
    where
     m.dept_no = d.dept_no
ORDER BY m.dept_no;


-- exercise
#old syntax

SELECT 
    e.emp_no, e.first_name, e.last_name, e.hire_date, dm.dept_no
FROM
    employees e,
    dept_manager dm
WHERE
    e.emp_no = dm.emp_no;
    
#new syntax


SELECT 
    e.emp_no, e.first_name, e.last_name, e.hire_date, dm.dept_no
FROM
    employees e
        JOIN
    dept_manager dm ON e.emp_no = dm.emp_no;

SELECT 
    e.emp_no, e.first_name, e.last_name, s.salary
FROM
    employees e
        JOIN
    salaries s ON e.emp_no = s.emp_no
WHERE
    s.salary >= 145000;  
    
    
-- JOIN and WHERE Used Together - exercise

SELECT 
    e.first_name, e.last_name, e.hire_date, t.title
FROM
    employees e
        JOIN
    titles t ON e.emp_no = t.emp_no
WHERE
    e.first_name = 'margareta'
        AND e.last_name = 'markovitch'
ORDER BY e.emp_no;


-- (cross join)

SELECT 
    dm.*, d.*
FROM
    dept_manager dm
        CROSS JOIN
    departments d
ORDER BY dm.emp_no , d.dept_no;


SELECT 
    dm.*, d.*
FROM
    departments d
        CROSS JOIN
    dept_manager dm
WHERE
    d.dept_no <> dm.dept_no
ORDER BY dm.emp_no , d.dept_no;


SELECT 
    e.*, d.*
FROM
    departments d
        CROSS JOIN
    dept_manager dm
        JOIN
    employees e ON dm.emp_no = e.emp_no
WHERE
    d.dept_no <> dm.dept_no
ORDER BY dm.emp_no , d.dept_no;

--

-- exercise 1 on cross join  

SELECT 
    dm.*, d.*
FROM
    departments d
        CROSS JOIN
    dept_manager dm
WHERE
    d.dept_no = 'd009'
ORDER BY d.dept_no;

-- using aggregate functions with joins

SELECT 
    e.gender, AVG(salary) AS average_salary
FROM
    employees e
        JOIN
    salaries s ON e.emp_no = s.emp_no
GROUP BY e.gender;


-- join more then two tables in sql

SELECT 
    e.first_name,
    e.last_name,
    e.hire_date,
    m.from_date,
    d.dept_name
FROM
    employees e
        JOIN
    dept_manager m ON e.emp_no = m.emp_no
        JOIN
    departments d ON m.dept_no = d.dept_no;
    
    SELECT 
    e.first_name,
    e.last_name,
    e.hire_date,
    m.from_date,
    d.dept_name
FROM
    departments d
        JOIN
    dept_manager m ON d.dept_no = m.dept_no
        JOIN
    employees e ON m.emp_no = e.emp_no;
    
    -- exercises
    
    SELECT 
    e.first_name,
    e.last_name,
    e.hire_date,
    t.title,
    m.from_date,
    d.dept_name
FROM
    employees e
        JOIN
    dept_manager m ON e.emp_no = m.emp_no
        JOIN
    departments d ON m.dept_no = d.dept_no
        JOIN
    titles t ON e.emp_no = m.emp_no
WHERE
    t.title = 'manager'
ORDER BY e.emp_no;
    
   --  2nd solution
   
SELECT 
    e.first_name,
    e.last_name,
    e.hire_date,
    t.title,
    m.from_date,
    d.dept_name
FROM
    employees e
        JOIN
    dept_manager m ON e.emp_no = m.emp_no
        JOIN
    departments d ON m.dept_no = d.dept_no
        JOIN
    titles t ON e.emp_no = t.emp_no
        AND m.from_date = t.from_date
ORDER BY e.emp_no;


-- lets obtain the names of all the departments and average salaries paid to the managers in each of them.

SELECT 
    d.dept_name, AVG(salary) AS average_salary
FROM
    departments d
        JOIN
    dept_manager m ON d.dept_no = m.dept_no
        JOIN
    salaries s ON m.emp_no = s.emp_no
GROUP BY d.dept_name
ORDER BY average_salary DESC;


-- How many male and how many female managers do we have in the ‘employees’ database?

SELECT 
    e.gender, COUNT(dm.emp_no) as Count
FROM
    employees e
        JOIN
    dept_manager dm ON e.emp_no = dm.emp_no
GROUP BY gender;



